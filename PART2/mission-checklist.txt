-----------------------------------------------------------------------------------------------------------------------------------------------------
  __  __ ___ ____ ____ ___ ___  _   _    ____ _   _ _____ ____ _  ___     ___ ____ _____ 
 |  \/  |_ _/ ___/ ___|_ _/ _ \| \ | |  / ___| | | | ____/ ___| |/ / |   |_ _/ ___|_   _|
 | |\/| || |\___ \___ \| | | | |  \| | | |   | |_| |  _|| |   | ' /| |    | |\___ \ | |  
 | |  | || | ___) |__) | | |_| | |\  | | |___|  _  | |__| |___| . \| |___ | | ___) || |  
 |_|  |_|___|____/____/___\___/|_| \_|  \____|_| |_|_____\____|_|\_\_____|___|____/ |_|  
                                                                                                            
-----------------------------------------------------------------------------------------------------------------------------------------------------
ACCESS CREDENTIALS
------------------
Domain username:		<devboxusername>
Domain password:		<devboxpassword>
Domain name:			<devboxdomain>

-----------------------------------------------------------------------------------------------------------------------------------------------------
ORIENTATION
-----------

Current website:		<currentloadbalancerdns>
-----------------------------------------------------------------------------------------------------------------------------------------------------
MISSION 1
---------

S3 bucket name:			<s3bucket>
source server IP address:	<sourceserverIPaddress>
secret arn: 			<secretarn>
application id:			**FILL ME IN**
VPC ID:				<vpcid>

-----------------------------------------------------------------------------------------------------------------------------------------------------
MISSION 3
---------
SQL Server name:			<sqlserver>
SQL Server port			1433
SQL authentication username:	<sqlusername>
SQL authentication password:	<sqlpassword>

Aurora Server name:			<auroraserver>
Aurora Server port:			3306
Aurora database:			postgres
Aurora authentication username: <aurorausername>
Aurora authentication password:	<aurorapassword>

-----------------------------------------------------------------------------------------------------------------------------------------------------
MISSION 4
---------
Region:				<Region>
AWS access key ID:		<awsaccesskeyid>
AWS secret access key:		<awsaccesskeysecret>
AWS KMS key ARN:		<awskmskeyarn>
S3 bucket name:			<s3bucket>
Output location:		**FILL ME IN**

-----------------------------------------------------------------------------------------------------------------------------------------------------
MISSION 5
---------



-----------------------------------------------------------------------------------------------------------------------------------------------------
MISSION 6
---------



-----------------------------------------------------------------------------------------------------------------------------------------------------
BACKUP PLANS
------------
Here's a list of commands you will hopefully NOT need.

[01] Install AWS CLI
msiexec.exe /i https://awscli.amazonaws.com/AWSCLIV2.msi /quiet

[02] Install Windows admin tools
Install-WindowsFeature -Name RSAT -IncludeAllSubFeature

[03] Install Chocolatey
Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; Invoke-Expression ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))

[04] Install Dbeaver
C:\ProgramData\\chocolatey\choco install dbeaver -y

[05] Install Git
C:\ProgramData\\chocolatey\choco install git -y
$env:Path += ";C:\Program Files\Git\bin"

[06] Install SQL Management Tools
C:\ProgramData\\chocolatey\choco install sql-server-management-studio -y

[07] Install Visual Studio Community Edition
C:\ProgramData\\chocolatey\choco install visualstudio2022community -y
C:\ProgramData\\chocolatey\choco install visualstudio2022-workload-netweb -y

[08] Download and Extract App2Container
$FolderPath = "C:\MISSION_PACK"
Invoke-WebRequest -UseBasicParsing "https://app2container-release-us-east-1.s3.us-east-1.amazonaws.com/latest/windows/AWSApp2Container-installer-windows.zip" -OutFile $FolderPath\APP2C\AWSApp2Container-installer-windows.zip
Expand-Archive -Path $FolderPath\APP2C\AWSApp2Container-installer-windows.zip -DestinationPath $FolderPath\APP2C\AWSApp2Container-installer-windows -Force

[09] Download Microservices Extractor
$FolderPath = "C:\MISSION_PACK"
Invoke-WebRequest -UseBasicParsing "https://s3.us-west-2.amazonaws.com/aws.serviceextract.download/latest/windows/ServiceExtract.exe" -OutFile $FolderPath\MicroservicesExtractor

[10] Old Web Server files (run on .NET framework web server)
Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; Invoke-Expression ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))
C:\ProgramData\\chocolatey\choco install git -y
$env:Path += ";C:\Program Files\Git\bin"
C:\ProgramData\\chocolatey\choco install git -y
$env:Path += ";C:\Program Files\Git\bin"
git clone https://github.com/aws-samples/microsoft-on-aws-adventure-game.git C:\inetpub\anyo
# Move files to correct location

[11] Download and Extract SCT and drivers
$FolderPath = "C:\MISSION_PACK"
New-Item -Path $FolderPath\SCT -ItemType Directory -Force
(New-Object System.Net.WebClient).DownloadFile("https://s3.amazonaws.com/publicsctdownload/Windows/aws-schema-conversion-tool-1.0.latest.zip", "$FolderPath\SCT\aws-schema-conversion-tool-1.0.latest.zip")
Expand-Archive -Path $FolderPath\SCT\aws-schema-conversion-tool-1.0.latest.zip -DestinationPath $FolderPath\SCT -Force
New-Item -Path C:\MISSION_PACK\SCT\DatabaseDrivers -ItemType Directory -Force
(New-Object System.Net.WebClient).DownloadFile("https://go.microsoft.com/fwlink/?linkid=2245438", "$FolderPath\SCT\DataBaseDrivers\sqljdbc_12.4.1.0_enu.zip")
Expand-Archive -Path $FolderPath\SCT\DatabaseDrivers\sqljdbc_12.4.1.0_enu.zip -DestinationPath $FolderPath\SCT\DatabaseDrivers -Force
(New-Object System.Net.WebClient).DownloadFile("https://jdbc.postgresql.org/download/postgresql-42.2.19.jar", "$FolderPath\SCT\DatabaseDrivers\postgresql-42.2.19.jar")

-----------------------------------------------------------------------------------------------------------------------------------------------------
LOG LOCATIONS
-------------
C:\Windows\System32\config\systemprofile\AppData\Local\Temp
C:\ProgramData\Amazon\EC2Launch\log\
